apiVersion: v1
kind: Namespace
metadata:
  name: auto-ingress
  labels:
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/audit: privileged
    pod-security.kubernetes.io/warn: privileged
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: auto-ingress
  labels:
    k8s-app: nginx-app-ingress
spec:
  rules:
  - host: foo1.bar.com
    http:
      paths:
      - backend:
          service:
            name: nginx-ingress-svc
            port:
              number: 8080
        path: /
        pathType: ImplementationSpecific
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-ingress
  namespace: auto-ingress
spec:
  podSelector: {}
  ingress:
  - {}
  policyTypes:
  - Ingress
---
apiVersion: v1
kind: Service
metadata:
 name: nginx-ingress-svc
 namespace: auto-ingress
 labels:
   k8s-app: nginx-app-ingress
spec:
 ports:
 - port: 8080
   targetPort: 8080
   protocol: TCP
   name: http
 selector:
   k8s-app: nginx-app-ingress
---
apiVersion: v1
kind: ReplicationController
metadata:
 name: test-ingress
 namespace: auto-ingress
spec:
 replicas: 2
 selector:
   k8s-app: nginx-app-ingress
 template:
   metadata:
     labels:
       k8s-app: nginx-app-ingress
   spec:
     terminationGracePeriodSeconds: 60
     containers:
     - name: testcontainer
       image: ranchertest/mytestcontainer:unprivileged
       ports:
       - containerPort: 8080
