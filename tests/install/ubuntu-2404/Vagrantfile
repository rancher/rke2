# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['TEST_INSTALL_SH'] ||= '../../../install.sh'

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-24.04"
  config.vm.boot_timeout = ENV['TEST_VM_BOOT_TIMEOUT'] || 600 # seconds
  config.vm.synced_folder '.', '/vagrant', type: 'rsync', disabled: false
  %w[libvirt virtualbox vmware_desktop].each do |p|
    config.vm.provider p do |v, o|
      v.cpus = ENV['TEST_VM_CPUS'] || 2
      v.memory = ENV['TEST_VM_MEMORY'] || 3072
    end
  end

  # Load in helper functions
  load "../install_util.rb"

  external_env = ""
  ENV.select{|k,v| k.start_with?('RKE2_') || k.start_with?('INSTALL_RKE2_')}.each {|key,value| external_env << "#{key.to_s}=#{value.to_s}"}

  config.vm.define "install-ubuntu-2404", primary: true do |test|
    test.vm.hostname = 'smoke'
    test.vm.provision 'rke2-upload-installer', type: 'file', run: 'always', source: ENV['TEST_INSTALL_SH'], destination: 'install.sh'
    test.vm.provision"rke2-install", type: 'rke2', run: "once" do |rke2|
      rke2.installer_url = 'file:///home/vagrant/install.sh'
      rke2.env = %W[ #{external_env} INSTALL_RKE2_TYPE=server]
      rke2.config = <<~YAML
        token: 'vagrant'
      YAML
      rke2.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
    end
    
    waitForControlPlane(test.vm, config.vm.box.to_s)
    waitForCanal(test.vm)
    waitForCoreDNS(test.vm)
    waitForIngressNginx(test.vm)
    waitForMetricsServer(test.vm)
    
    kubectlStatus(test.vm)
    test.vm.provision "rke2-procps", type: "shell", run: ENV['CI'] == 'true' ? 'never' : 'once' do |sh|
      sh.inline = <<~SHELL
        #!/usr/bin/env bash
        set -eux -o pipefail
        ps auxZ | grep -E 'etcd|kube|rke2|container|confined' | grep -v grep
      SHELL
    end

    mountDirs(test.vm)
    runKillAllScript(test.vm)
    checkMountPoint(test.vm)
  end

  config.vm.provision "install-packages", type: "shell", run: "once" do |sh|
    sh.upload_path = "/tmp/vagrant-install-packages"
    sh.env = {
        'INSTALL_PACKAGES': ENV['INSTALL_PACKAGES'],
    }
    sh.inline = <<~SHELL
        #!/usr/bin/env bash
        set -eux -o pipefail
        apt-get -y update
        apt-get -y install \
            curl \
            iptables \
            less \
            lsof \
            socat \
            ${INSTALL_PACKAGES}
    SHELL
  end

  config.vm.provision "rke2-profile-env", type: "shell", run: "once" do |sh|
    sh.inline = <<~SHELL
        #!/usr/bin/env bash
        cat <<-EOF > /etc/profile.d/rke2.sh
export KUBECONFIG=/etc/rancher/rke2/rke2.yaml PATH=/usr/local/bin:$PATH:/var/lib/rancher/rke2/bin
EOF
    SHELL
  end

end
