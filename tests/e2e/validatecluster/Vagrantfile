ENV['VAGRANT_NO_PARALLEL'] = 'no'
NODE_ROLES = (ENV['E2E_NODE_ROLES'] ||
  ["server-0", "server-1", "server-2", "agent-0" ])
NODE_BOXES = (ENV['E2E_NODE_BOXES'] ||
  ['generic/ubuntu2004', 'generic/ubuntu2004', 'generic/ubuntu2004', 'generic/ubuntu2004'])
GITHUB_BRANCH = (ENV['E2E_GITHUB_BRANCH'] || "master")
RELEASE_VERSION = (ENV['E2E_RELEASE_VERSION'] || "")
NODE_CPUS = (ENV['E2E_NODE_CPUS'] || 2).to_i
NODE_MEMORY = (ENV['E2E_NODE_MEMORY'] || 3072).to_i
CNI = (ENV['E2E_CNI'] || "canal") # canal, cilium and calico supported
REGISTRY = (ENV['E2E_REGISTRY'] || "")
# Virtualbox >= 6.1.28 require `/etc/vbox/network.conf` for expanded private networks,
# see https://www.virtualbox.org/manual/ch06.html#network_hostonly
NETWORK_PREFIX = "10.10.10"

def provision(vm, roles, role_num, node_num)
  vm.box = NODE_BOXES[node_num]
  vm.hostname = "#{roles[0]}-#{role_num}"
  # An expanded netmask is required to allow VM<-->VM communication, virtualbox defaults to /32
  node_ip = "#{NETWORK_PREFIX}.#{100+node_num}"
  vm.network "private_network", ip: node_ip, netmask: "255.255.255.0"

  scripts_location = Dir.exists?("./scripts") ? "./scripts" : "../scripts" 
  vagrant_defaults = File.exists?("./vagrantdefaults.rb") ? "./vagrantdefaults.rb" : "../vagrantdefaults.rb"
  load vagrant_defaults
  
  defaultOSConfigure(vm)
  install_type = getInstallType(vm, RELEASE_VERSION, GITHUB_BRANCH)
  
  vm.provision "shell", inline: "ping -c 2 rke2.io"
  
  if !REGISTRY.empty?
    vm.provision "Set private registry", type: "shell", path: scripts_location + "/registry.sh", args: [ "#{NETWORK_PREFIX}.1" ]
  end

  if roles.include?("server") && role_num == 0
    vm.provision :rke2, run: 'once' do |rke2|
      rke2.env = %W[INSTALL_RKE2_TYPE=server #{install_type}]
      rke2.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
      rke2.config = <<~YAML
        write-kubeconfig-mode: '0644'
        node-external-ip: #{NETWORK_PREFIX}.100
        node-ip: #{NETWORK_PREFIX}.100
        token: vagrant-rke2
        cni: #{CNI}
      YAML
    end
  elsif roles.include?("server") && role_num != 0
    vm.provision :rke2, run: 'once' do |rke2|
      rke2.env = %W[INSTALL_RKE2_TYPE=server #{install_type}]
      rke2.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
      rke2.config = <<~YAML
        write-kubeconfig-mode: '0644'
        node-external-ip: #{node_ip}
        node-ip: #{node_ip}
        server: https://#{NETWORK_PREFIX}.100:9345
        token: vagrant-rke2
        cni: #{CNI}
      YAML
    end
  end
  if roles.include?("agent")
    vm.provision :rke2, run: 'once' do |rke2|
      rke2.env = %W[INSTALL_RKE2_TYPE=agent #{install_type}]
      rke2.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
      rke2.install_path = false
      rke2.config = <<~YAML
        write-kubeconfig-mode: '0644'
        node-external-ip: #{node_ip}
        node-ip: #{node_ip}
        server: https://#{NETWORK_PREFIX}.100:9345
        token: vagrant-rke2
      YAML
    end
  end
end

Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-rke2", "vagrant-reload"]
  # Default provider is libvirt, virtualbox is only provided as a backup
  config.vm.provider "libvirt" do |v|
    v.cpus = NODE_CPUS
    v.memory = NODE_MEMORY
  end
  config.vm.provider "virtualbox" do |v|
    v.cpus = NODE_CPUS
    v.memory = NODE_MEMORY
  end
  
  if NODE_ROLES.kind_of?(String)
    NODE_ROLES = NODE_ROLES.split(" ", -1)
  end
  if NODE_BOXES.kind_of?(String)
    NODE_BOXES = NODE_BOXES.split(" ", -1)
  end

  # Must iterate on the index, vagrant does not understand iterating 
  # over the node roles themselves
  NODE_ROLES.length.times do |i|
    name = NODE_ROLES[i]
    config.vm.define name do |node|
      roles = name.split("-", -1)
      role_num = roles.pop.to_i
      provision(node.vm, roles, role_num, i)
    end
  end
end
